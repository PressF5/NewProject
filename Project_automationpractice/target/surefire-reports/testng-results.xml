<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="6" passed="2" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-25T15:45:37 MSK" name="Suite" finished-at="2021-10-25T15:47:37 MSK" duration-ms="120764">
    <groups>
    </groups>
    <test started-at="2021-10-25T15:45:37 MSK" name="Chrome" finished-at="2021-10-25T15:47:37 MSK" duration-ms="120764">
      <class name="org.project.tests.LoginTest">
        <test-method is-config="true" signature="beforeSuit()[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:45:37 MSK" name="beforeSuit" finished-at="2021-10-25T15:45:37 MSK" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:45:38 MSK" name="beforeMethod" finished-at="2021-10-25T15:45:38 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:45:38 MSK" name="invalidLoginTest" data-provider="getInvalidEmailAddressAndPassword" finished-at="2021-10-25T15:46:10 MSK" duration-ms="32525" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.project.pojo.User@3667faa8]]>
              </value>
            </param>
          </params>
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should have text 'Password is required.123' {By.xpath: //div[@class='alert alert-danger' and not(@id)]//li}
Element: '<li type value="0">Password is required.</li>'
Actual value: Password is required.
Timeout: 10 s.]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should have text 'Password is required.123' {By.xpath: //div[@class='alert alert-danger' and not(@id)]//li}
Element: '<li type value="0">Password is required.</li>'
Actual value: Password is required.
Timeout: 10 s.
at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)
at com.codeborne.selenide.commands.Should.execute(Should.java:30)
at com.codeborne.selenide.commands.Should.execute(Should.java:14)
at com.codeborne.selenide.commands.Commands.execute(Commands.java:157)
at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:134)
at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:86)
at jdk.proxy2/jdk.proxy2.$Proxy22.shouldHave(Unknown Source)
at org.project.pages.LoginPage.checkSingInError(LoginPage.java:39)
at org.project.tests.LoginTest.invalidLoginTest(LoginTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:46:14 MSK" name="afterMethod" finished-at="2021-10-25T15:46:15 MSK" duration-ms="903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginTest status=FAILURE method=LoginTest.invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:46:15 MSK" name="invalidLoginTest" data-provider="getInvalidEmailAddressAndPassword" finished-at="2021-10-25T15:46:42 MSK" duration-ms="26991" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.project.pojo.User@61503d00]]>
              </value>
            </param>
          </params>
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should have text 'An email address required.123' {By.xpath: //div[@class='alert alert-danger' and not(@id)]//li}
Element: '<li type value="0">An email address required.</li>'
Actual value: An email address required.
Timeout: 10 s.]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should have text 'An email address required.123' {By.xpath: //div[@class='alert alert-danger' and not(@id)]//li}
Element: '<li type value="0">An email address required.</li>'
Actual value: An email address required.
Timeout: 10 s.
at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)
at com.codeborne.selenide.commands.Should.execute(Should.java:30)
at com.codeborne.selenide.commands.Should.execute(Should.java:14)
at com.codeborne.selenide.commands.Commands.execute(Commands.java:157)
at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:134)
at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:86)
at jdk.proxy2/jdk.proxy2.$Proxy22.shouldHave(Unknown Source)
at org.project.pages.LoginPage.checkSingInError(LoginPage.java:39)
at org.project.tests.LoginTest.invalidLoginTest(LoginTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:46:15 MSK" name="beforeMethod" finished-at="2021-10-25T15:46:15 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:46:44 MSK" name="afterMethod" finished-at="2021-10-25T15:46:45 MSK" duration-ms="814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginTest status=FAILURE method=LoginTest.invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:46:45 MSK" name="invalidLoginTest" data-provider="getInvalidEmailAddressAndPassword" finished-at="2021-10-25T15:47:05 MSK" duration-ms="20315" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.project.pojo.User@1a99692]]>
              </value>
            </param>
          </params>
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should have text 'An email address required.123' {By.xpath: //div[@class='alert alert-danger' and not(@id)]//li}
Element: '<li type value="0">An email address required.</li>'
Actual value: An email address required.
Timeout: 10 s.]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should have text 'An email address required.123' {By.xpath: //div[@class='alert alert-danger' and not(@id)]//li}
Element: '<li type value="0">An email address required.</li>'
Actual value: An email address required.
Timeout: 10 s.
at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)
at com.codeborne.selenide.commands.Should.execute(Should.java:30)
at com.codeborne.selenide.commands.Should.execute(Should.java:14)
at com.codeborne.selenide.commands.Commands.execute(Commands.java:157)
at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:134)
at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:86)
at jdk.proxy2/jdk.proxy2.$Proxy22.shouldHave(Unknown Source)
at org.project.pages.LoginPage.checkSingInError(LoginPage.java:39)
at org.project.tests.LoginTest.invalidLoginTest(LoginTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:46:45 MSK" name="beforeMethod" finished-at="2021-10-25T15:46:45 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:07 MSK" name="afterMethod" finished-at="2021-10-25T15:47:08 MSK" duration-ms="1053" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginTest status=FAILURE method=LoginTest.invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:08 MSK" name="beforeMethod" finished-at="2021-10-25T15:47:08 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:08 MSK" name="invalidLoginTest" data-provider="getInvalidEmailAddressAndPassword" finished-at="2021-10-25T15:47:21 MSK" duration-ms="13257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.project.pojo.User@193d73d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:23 MSK" name="afterMethod" finished-at="2021-10-25T15:47:24 MSK" duration-ms="746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginTest status=SUCCESS method=LoginTest.invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:24 MSK" name="invalidLoginTest" data-provider="getInvalidEmailAddressAndPassword" finished-at="2021-10-25T15:47:35 MSK" duration-ms="11207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.project.pojo.User@19ce597a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:24 MSK" name="beforeMethod" finished-at="2021-10-25T15:47:24 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:37 MSK" name="afterMethod" finished-at="2021-10-25T15:47:37 MSK" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginTest status=SUCCESS method=LoginTest.invalidLoginTest(org.project.pojo.User)[pri:0, instance:org.project.tests.LoginTest@591fd34d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void org.project.tests.LoginTest.invalidLoginTest(org.project.pojo.User)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:org.project.tests.LoginTest@591fd34d]" started-at="2021-10-25T15:47:38 MSK" name="afterSuite" finished-at="2021-10-25T15:47:38 MSK" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- org.project.tests.LoginTest -->
    </test> <!-- Chrome -->
  </suite> <!-- Suite -->
</testng-results>
